#!/usr/bin/env python3
"""
SwipeStyle Log Cleaner
=====================

Bu script log dosyalarını temizler.

Kullanım:
    python clear_logs.py              # Sadece agent_output_log.txt'yi temizle
    python clear_logs.py --all        # Hem debug_log.txt hem agent_output_log.txt'yi temizle
    python clear_logs.py --backup     # Temizlemeden önce backup al
"""

import argparse
import os
import shutil
from datetime import datetime

def backup_file(filename):
    """Dosyayı backup al"""
    if os.path.exists(filename):
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        backup_name = f"{filename}.backup_{timestamp}"
        shutil.copy2(filename, backup_name)
        print(f"✅ Backup alındı: {backup_name}")
        return backup_name
    return None

def clear_log_file(filename, create_header=True):
    """Log dosyasını temizle"""
    try:
        if os.path.exists(filename):
            with open(filename, 'w', encoding='utf-8') as f:
                if create_header and filename == 'agent_output_log.txt':
                    f.write("# SwipeStyle Agent Output Log\n")
                    f.write("# This file contains all responses generated by the agent\n")
                    f.write("# Format: [Timestamp] Response Type: Response Data\n")
                    f.write(f"# Cleared on: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\n")
                elif create_header and filename == 'debug_log.txt':
                    f.write(f"# Debug log cleared on: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
            print(f"✅ {filename} temizlendi")
        else:
            print(f"⚠️  {filename} dosyası bulunamadı")
    except Exception as e:
        print(f"❌ {filename} temizlenirken hata: {e}")

def main():
    parser = argparse.ArgumentParser(description='SwipeStyle Log Cleaner')
    parser.add_argument('--all', action='store_true', help='Tüm log dosyalarını temizle')
    parser.add_argument('--backup', action='store_true', help='Temizlemeden önce backup al')
    parser.add_argument('--no-header', action='store_true', help='Başlık ekleme')
    
    args = parser.parse_args()
    
    files_to_clear = ['agent_output_log.txt']
    if args.all:
        files_to_clear.append('debug_log.txt')
    
    print("🧹 Log dosyaları temizleniyor...")
    
    # Backup al
    if args.backup:
        print("📦 Backup alınıyor...")
        for filename in files_to_clear:
            backup_file(filename)
    
    # Dosyaları temizle
    for filename in files_to_clear:
        clear_log_file(filename, create_header=not args.no_header)
    
    print("✨ Temizlik tamamlandı!")

if __name__ == '__main__':
    main()
